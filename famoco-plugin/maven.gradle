apply plugin: 'maven-publish'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'kotlin-android'
apply plugin: 'signing'

ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
    from android.sourceSets.main.kotlin.srcDirs
}

tasks.withType(dokkaHtml.getClass()).configureEach {
    pluginsMapConfiguration.set(
            ["org.jetbrains.dokka.base.DokkaBase": """{ "separateInheritedMembers": true}"""]
    )
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('kdoc')
    from dokkaJavadoc.outputDirectory
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
}

afterEvaluate {
    publishing {
        publications {
            mavenRelease(MavenPublication) {
                groupId = project.group
                artifactId = project.ext.pomArtifactId
                version = android.defaultConfig.versionName

                pom {
                    name = project.ext.pomName
                    description = project.ext.pomDescription
                    url = project.ext.pomUrl
                    licenses {
                        name = project.ext.pomLicenceName
                        url = project.ext.pomLicenceURL
                    }
                    developers {
                        developer {
                            name = project.ext.pomDevelopersName
                            email = project.ext.pomDevelopersemail
                        }
                    }
                    scm {
                        connection = project.ext.pomScmConnection
                        developerConnection = project.ext.pomScmdeveloperConnection
                        url = project.ext.pomScmUrl
                    }
                }

                artifact androidSourcesJar
                artifact javadocJar
                artifact("$buildDir/outputs/aar/${archivesBaseName}-${version}.aar")
            }
        }
        repositories {
            maven {
                credentials {
                    username = ossrhUsername
                    password = ossrhPassword
                }
                def releasesRepoUrl = "https://s01.oss.sonatype.org/content/repositories/release"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }

    signing {
        sign publishing.publications.mavenRelease
    }
}